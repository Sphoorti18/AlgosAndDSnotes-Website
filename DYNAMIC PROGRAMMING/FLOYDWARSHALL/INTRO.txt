ALSO KNOWN AS aLLPAIRSsHORTEST PATH1 :) (GONNA TRICK YOU IN EXAM)!
TIME COMPLEXITY is a short version of SPACE COMPLEXITY 
/*-------------------------------------------*/
Algo floydWarsh(){
int n , m, i; //GLOBAL VARS' (ROWS & COLS) ==> O(3) ==> O(1) : 0 <= n, m, i <= (+ INFINITY)

int mat[n][m]; ==> O(1)

//OuterForLoop == > O(n), ROWS
for(i=0;i<n;i++){
for(i=0;i<m;i++){ //InnerForLoop == > O(m), COLS
read(mat[i][i]);
}
}//O(n*m);

//LETS' take 0 <= k <= (+ INFINITY) ==> O(1)

//FORMULA! (HOLD ON TO YOUR SEATS TIGHT, THE PLANE IS GONNA TAKEOFF ) :|
//distance(i) ---> distance(j) ==>> (1)
//distance(i) ---> distance(k) ---> distance(j) ==>> (2)
//COMBINE And COMPARE ==> 
CASE_1 :  (1) <= (2) ==> write((1));
CASE_2 :  (1) >= (2) ==> write((2));
CASE_3 :  (1) == (2) ==> write((1)) or write((2)) ==> write((1)) == write((2)) ;

//two[100][100], tree[100][100][100] 
//OuterForLoop == > O(n), ROWS
for(i=0;i<=n;i++){ 
//InnerForLoop == > O(m), COLUMNS
for(j=0;j<=m;j++){
read(two[i][j]);
//InnerForLoop == > O(p), HEIGHTS
for(k=0;k<=p;k++){
read(tree[i][j][k]);
//COMPARE two[i][j] & tree[i][j][k] by USING THE ABOVE 3 CASES;
//IMPLEMENTING IT USING  CONDITIONAL STATEMENTS
}
}
}//3x3 matrix


}//END OF PROGRAM
/*-------------------------------------------*/

/*-------------------------------------------*/
