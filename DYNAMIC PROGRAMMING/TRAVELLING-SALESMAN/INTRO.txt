//CONDENSING SUM-OF-SUBSETS ==> O(2^x)

/*****************************************************************/
Algo travelSales(){

//OuterForLoop ==> O(n)
for(i=0;i<n;i++){
//InnerForLoop ==> O(n)
for(i=0;i<n;i++){

read(two[100][100]); // ==> READING FROM CONSOLE ==> O(1)

//SWITCH-1 ==> O(1)

SWITCH-1{
   CASE_1:
      write("two1[i][i]"); //PRINTING TO CONSOLE ==> O(1)
   BREAK;
   
   CASE_2{
   write("two2[i][i]"); //PRINTING TO CONSOLE ==> O(1)
   BREAK;
   }

   DEFUALT{
    write("WRONG CHOICE!"); //PRINTING TO CONSOLE ==> O(1)
    BREAK;

}//EOF SWITCH-1

}//EOF 2nd FOR LOOP 

}//EOF 1st FOR LOOP 

//TOTAL == O((4)) == O(2^2) == O(2^N) | 0 <= N <= (+ INFINITY) ; ==> O(2^e) | e ~= (+ INFINITY) 
// ==> O(2^2 * 2^e) | O(2^(e+2)) ~= O(2^(+ INFINITY)) 
}//EOF ==> O(2^2 * 2^N);


}//EOF travelSales ==> O(2^e)
/*****************************************************************/
