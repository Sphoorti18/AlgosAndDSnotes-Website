RECURIVE METHOD 2 : ALSO KNOWN as ROD CUTTING IN BOTTOM-UP STYLE (CLRS/KOURMEN) :);)\| 

/*---------------------------------------------------------------------------------*/
Algo bGraph(){

//int n,m,i,j; //# of VERTICES == > V_i or V_j ==> 0 <= i,j <= (+ INFINITY); //x[i][j] , WITHIN V[i][j] ==>  0 <= i,j <= (+ INFINITY);
Algo fGraph(){
/*---------------------------------------------------------------------------------*/
//OuterForLoop ==> O(n) ==> ROWS
for(i=0;i<=n;i++){ //InnerForLoop ==> O(m) ==> COLS
for(j=0;j<=m;j++){
read(V[i][j]);
}
}
//OuterForLoop ==> O(n) ==> ROWS
for(i=0;i<=n;i++){ //InnerForLoop ==> O(m) ==> COLS
for(j=0;j<=m;j++){
read(x[i][j]);
}
}
//INTERCHANGE

TOTAL == O((2nm)^2) ==> mn^2 <= (2mn)^2 <= (+ INFINITY); ==> THEREFORE, O((nm)^2);
/*---------------------------------------------------------------------------------*/

//OuterForLoop ==> O(n) ==> ROWS
for(i=0;i<=n;i++){ //InnerForLoop ==> O(m) ==> COLS
for(j=0;j<=m;j++){
read(x[i][j]);
}
} // O((nm)^2)

//OuterForLoop ==> O(n) ==> ROWS
for(i=0;i<=n;i++){ //InnerForLoop ==> O(m) ==> COLS
for(j=0;j<=m;j++){
read(V[i][j]);
}
} // O((nm)^2)

TOTAL == O((2nm)^2) ==> mn^2 <= (2mn)^2 <= (+ INFINITY); ==> THEREFORE, O((nm)^2);

}//END OF PROGRAM
/*---------------------------------------------------------------------------------*/

/*---------------------------------------------------------------------------------*/
