**GLOSSARY 
1) ∀ = For all
/********************************************************************************************************/
**PREREQUSITES from Paul's online math notes
Discrete mathematics Domain
1) BOOLEAN ALGEBRA 
2) SET THEORY
3) PERMUTATIONS AND COMBINATIONS
/********************************************************************************************************/
**BIG PICTURE of LCS using Brute Force
Algo LCS{
T = {Y[x1], Y[x2], ... Y[n] | (x_{i}) lies 0 <= i <= n} 
//Side note : It's different from substrings because the list of characters derived from T isn't same! 

//INPUT = {String X has size n} and {String Y has size m}
//OUTPUT = Subsequence of {String X and String Y}

}//EOF LCS
//----------------------------------------------------------------------------------------------------------
//Time Complexity :

String X has n possibles for subsequences and also subsequences that are not in X which Y 
(Complement of X) => 2^n => ∀ subsequences in X, it will take O(m) to check whether it's there in Y or not!
Inference : O(2^n)*O(m) = O(2^n*m) using BRUTE FORCE METHOD
/********************************************************************************************************/

/********************************************************************************************************/
*LCS USING DYNAMIC PROGRAMING

/********************************************************************************************************/
THE END ;);)
